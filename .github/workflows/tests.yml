name: Tests

# define when workflow runs
on:
  # run on push only to master and develop
  push:
    branches: [ master ]
    # in both cases ignore markdown docs
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "notebooks/**"
  # run on pr vs main
  pull_request:
    branches: [ master ]
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "notebooks/**"

# define the jobs that make up the workflow
jobs:
  # define a job called tests
  tests:
    # define the name of a specific job
    name: ${{ matrix.session }} ${{ matrix.python-version }} / ${{ matrix.os }}
    # needed when we have a matrix config with different op systems
    runs-on: ${{ matrix.os }}
    # define the matrix of jobs
    strategy:
      # if any job fails cancel all of them
      fail-fast: false
      # define our matrix as all op systems and 4 python versions
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10"]
        session: [tests]

    # configure --session for nox to only run a specifc subset of test
    # this is equiv to running e.g. nox --session mypy
    # sessions are specified above in the matrix spec
    env:
      NOXSESSION: ${{ matrix.session }}

    steps:
      # check out this repo onto github runner
      - name: Check out the repository
        uses: actions/checkout@v2.4.0
      # setup specified matrix version of python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      # get the version of build tools defined by constraints file
      # to keep things replicable and deterministic we pin build tools in CI
      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version
      - name: Install Poetry
        run: |
          pip install --constraint=.github/workflows/constraints.txt poetry
          poetry --version
      # install both nox and nox-poetry so when nox builds environments
      # it pulls in dependencies according to pyproject.toml using poetry
      - name: Install Nox
        run: |
          pip install --constraint=.github/workflows/constraints.txt nox nox-poetry
          nox --version
      # authenticate with google cloud using service account json (stored as secret)
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
      # ensure we have the gcloud CLI installed as used in the next step to generate a token
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
      # run nox testing using selected python version
      # session is passed by env.NOXSESSION above
      - name: Run Nox
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          nox --force-color --python=${{ matrix.python-version }}
